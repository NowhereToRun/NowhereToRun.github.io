<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>感觉有双翅膀 能飞越高山和海洋</title>
    <description>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 09 Aug 2017 14:34:49 +0800</pubDate>
    <lastBuildDate>Wed, 09 Aug 2017 14:34:49 +0800</lastBuildDate>
    <generator>Jekyll v3.4.3</generator>
    
      <item>
        <title>页面退出检测</title>
        <description>&lt;p&gt;前段时间由于需要检测文章的阅读率，为了精确统计想要在退出之前发出请求，于是对一些方法进行了尝试。&lt;/p&gt;

&lt;p&gt;网上主要说的有两种方法&lt;code class=&quot;highlighter-rouge&quot;&gt;onunload&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;onbeforeunload&lt;/code&gt;，在移动端测试了几个浏览器，兼容性如下：&lt;/p&gt;

&lt;table&gt;
&lt;tbody&gt;
    &lt;tr&gt;
        &lt;th style=&quot;width: 80px;&quot;&gt;浏览器&lt;/th&gt;
        &lt;th style=&quot;width: 100px;&quot;&gt;方法&lt;/th&gt;
        &lt;th style=&quot;width: 50px;&quot;&gt;onunload&lt;/th&gt;
        &lt;th style=&quot;width: 50px;&quot;&gt;onbeforeunload&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td rowspan=&quot;3&quot;&gt;&lt;font&gt;UC&lt;/font&gt;&lt;/td&gt;
        &lt;td&gt;刷新&lt;/td&gt;
        &lt;td bgcolor=&quot;ForestGreen&quot;&gt;&lt;/td&gt;
        &lt;td bgcolor=&quot;ForestGreen&quot;&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;关闭&lt;/td&gt;
        &lt;td bgcolor=&quot;ForestGreen&quot;&gt;&lt;/td&gt;
        &lt;td bgcolor=&quot;ForestGreen&quot;&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;回退&lt;/td&gt;
        &lt;td bgcolor=&quot;ForestGreen&quot;&gt;&lt;/td&gt;
        &lt;td bgcolor=&quot;ForestGreen&quot;&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td rowspan=&quot;3&quot;&gt;&lt;font&gt;Chrome&lt;/font&gt;&lt;/td&gt;
        &lt;td&gt;刷新&lt;/td&gt;
        &lt;td bgcolor=&quot;ForestGreen&quot;&gt;&lt;/td&gt;
        &lt;td bgcolor=&quot;ForestGreen&quot;&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;关闭&lt;/td&gt;
        &lt;td bgcolor=&quot;ForestGreen&quot;&gt;&lt;/td&gt;
        &lt;td bgcolor=&quot;ForestGreen&quot;&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;回退&lt;/td&gt;
        &lt;td bgcolor=&quot;ForestGreen&quot;&gt;&lt;/td&gt;
        &lt;td bgcolor=&quot;ForestGreen&quot;&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td rowspan=&quot;3&quot;&gt;&lt;font&gt;Chrome PC&lt;/font&gt;&lt;/td&gt;
        &lt;td&gt;刷新&lt;/td&gt;
        &lt;td bgcolor=&quot;ForestGreen&quot;&gt;&lt;/td&gt;
        &lt;td bgcolor=&quot;ForestGreen&quot;&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;关闭&lt;/td&gt;
        &lt;td bgcolor=&quot;ForestGreen&quot;&gt;&lt;/td&gt;
        &lt;td bgcolor=&quot;ForestGreen&quot;&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;回退&lt;/td&gt;
        &lt;td bgcolor=&quot;ForestGreen&quot;&gt;&lt;/td&gt;
        &lt;td bgcolor=&quot;ForestGreen&quot;&gt;&lt;/td&gt;
    &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td rowspan=&quot;3&quot;&gt;&lt;font&gt;华为原生 安卓6.0&lt;/font&gt;&lt;/td&gt;
        &lt;td&gt;刷新&lt;/td&gt;
        &lt;td bgcolor=&quot;ForestGreen&quot;&gt;&lt;/td&gt;
        &lt;td bgcolor=&quot;ForestGreen&quot;&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;关闭&lt;/td&gt;
        &lt;td bgcolor=&quot;ForestGreen&quot;&gt;&lt;/td&gt;
        &lt;td bgcolor=&quot;ForestGreen&quot;&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;回退&lt;/td&gt;
        &lt;td bgcolor=&quot;ForestGreen&quot;&gt;&lt;/td&gt;
        &lt;td bgcolor=&quot;ForestGreen&quot;&gt;&lt;/td&gt;
    &lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;If you are still looking for confidence with JavaScript, I highly recommend you read the other titles in this series first:&lt;/p&gt;

&lt;p&gt;Up &amp;amp; Going: Are you new to programming and JS? This is the roadmap you need to consult as you start your learning journey.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Up &amp;amp; Going&lt;/li&gt;
  &lt;li&gt;Scope &amp;amp; Closures&lt;/li&gt;
  &lt;li&gt;this &amp;amp; Object Prototypes&lt;/li&gt;
  &lt;li&gt;Types &amp;amp; Grammar&lt;/li&gt;
  &lt;li&gt;Async &amp;amp; Performance&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;/assets/images/rails.jpg&quot;&gt;&lt;img src=&quot;/assets/images/rails.jpg&quot; alt=&quot;railroad&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you’ve already read all those titles and you feel pretty comfortable with the topics they cover, it’s time we dive into the evolution of JS to explore all the changes coming not only soon but farther over the horizon.&lt;/p&gt;

&lt;h2 id=&quot;let-declarations&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;let&lt;/code&gt; Declarations&lt;/h2&gt;

&lt;p&gt;However, we can now create declarations that are bound to any block, called (unsurprisingly) &lt;em&gt;block scoping&lt;/em&gt;. This means all we need is a pair of &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt; to create a scope. Instead of using var, which always declares variables attached to the enclosing function (or global, if top level) scope, use &lt;code class=&quot;highlighter-rouge&quot;&gt;let&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;// 3&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;       &lt;span class=&quot;c1&quot;&gt;// 2&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
        <pubDate>Wed, 14 Jun 2017 00:14:47 +0800</pubDate>
        <link>http://localhost:4000/posts/leave-page-check/</link>
        <guid isPermaLink="true">http://localhost:4000/posts/leave-page-check/</guid>
        
        <category>front-end</category>
        
        
        <category>posts</category>
        
      </item>
    
      <item>
        <title>You Don't Know JS: ES6 &amp; Beyond</title>
        <description>&lt;p&gt;Before you dive into this book, you should have a solid working proficiency over JavaScript up to the most recent standard (at the time of this writing), which is commonly called ES5 (technically ES 5.1). Here, we plan to talk squarely about the upcoming ES6, as well as cast our vision beyond to understand how JS will evolve moving forward.&lt;/p&gt;

&lt;p&gt;If you are still looking for confidence with JavaScript, I highly recommend you read the other titles in this series first:&lt;/p&gt;

&lt;p&gt;Up &amp;amp; Going: Are you new to programming and JS? This is the roadmap you need to consult as you start your learning journey.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Up &amp;amp; Going&lt;/li&gt;
  &lt;li&gt;Scope &amp;amp; Closures&lt;/li&gt;
  &lt;li&gt;this &amp;amp; Object Prototypes&lt;/li&gt;
  &lt;li&gt;Types &amp;amp; Grammar&lt;/li&gt;
  &lt;li&gt;Async &amp;amp; Performance&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;/assets/images/rails.jpg&quot;&gt;&lt;img src=&quot;/assets/images/rails.jpg&quot; alt=&quot;railroad&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you’ve already read all those titles and you feel pretty comfortable with the topics they cover, it’s time we dive into the evolution of JS to explore all the changes coming not only soon but farther over the horizon.&lt;/p&gt;

&lt;h2 id=&quot;let-declarations&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;let&lt;/code&gt; Declarations&lt;/h2&gt;

&lt;p&gt;However, we can now create declarations that are bound to any block, called (unsurprisingly) &lt;em&gt;block scoping&lt;/em&gt;. This means all we need is a pair of &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt; to create a scope. Instead of using var, which always declares variables attached to the enclosing function (or global, if top level) scope, use &lt;code class=&quot;highlighter-rouge&quot;&gt;let&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;// 3&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;       &lt;span class=&quot;c1&quot;&gt;// 2&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
        <pubDate>Wed, 29 Jun 2016 21:09:47 +0800</pubDate>
        <link>http://localhost:4000/posts/es6/</link>
        <guid isPermaLink="true">http://localhost:4000/posts/es6/</guid>
        
        <category>front-end</category>
        
        
        <category>posts</category>
        
      </item>
    
      <item>
        <title>Welcome to Jekyll!</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Wed, 29 Jun 2016 00:09:47 +0800</pubDate>
        <link>http://localhost:4000/posts/welcome-to-jekyll/</link>
        <guid isPermaLink="true">http://localhost:4000/posts/welcome-to-jekyll/</guid>
        
        <category>jekyll</category>
        
        
        <category>posts</category>
        
      </item>
    
  </channel>
</rss>
